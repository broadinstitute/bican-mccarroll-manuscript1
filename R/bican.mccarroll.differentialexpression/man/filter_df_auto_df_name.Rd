% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createDGEList.R
\name{filter_df_auto_df_name}
\alias{filter_df_auto_df_name}
\title{Filter a Data Frame Using a Python-Style Expression}
\usage{
filter_df_auto_df_name(df_expr, python_filter_string)

filter_df_auto_df_name(df_expr, python_filter_string)
}
\arguments{
\item{df_expr}{An unquoted R data frame symbol (e.g., `df` or `my_data`). This is
captured using non-standard evaluation, so do not quote it.}

\item{python_filter_string}{A character string representing a Python-style filter,
such as that used on `.obs` in `AnnData`. Column references must be of the form
`adata.obs["column_name"]`. Logical operators `&`, `|`, and comparison operators
`==`, `!=`, `>=`, `<=`, `>`, `<` are supported.}
}
\value{
A subset of the original data frame, filtered using the evaluated expression.
  Rows with `NA` in the logical index are excluded.
}
\description{
This function applies a Python-style filter string (e.g., one that uses
`adata.obs["column"] == "value"` syntax) to an R data frame. It automatically
detects the name of the data frame passed in and rewrites the filter expression
to use R syntax (e.g., `df$column == "value"`). Logical `NA` values in the
evaluated expression are excluded from the result.
}
